initSidebarItems({"constant":[["OQS_COMPILE_BUILD_TARGET",""],["OQS_ENABLE_KEM_FRODOKEM",""],["OQS_ENABLE_KEM_frodokem_640_aes",""],["OQS_ENABLE_SHA3_xkcp_low_avx2",""],["OQS_ENABLE_SIG_DILITHIUM",""],["OQS_ENABLE_SIG_dilithium_2",""],["OQS_ENABLE_SIG_dilithium_2_avx2",""],["OQS_USE_ADX_INSTRUCTIONS",""],["OQS_USE_AES_INSTRUCTIONS",""],["OQS_USE_AES_OPENSSL",""],["OQS_USE_AVX2_INSTRUCTIONS",""],["OQS_USE_AVX_INSTRUCTIONS",""],["OQS_USE_BMI1_INSTRUCTIONS",""],["OQS_USE_BMI2_INSTRUCTIONS",""],["OQS_USE_OPENSSL",""],["OQS_USE_POPCNT_INSTRUCTIONS",""],["OQS_USE_SHA2_OPENSSL",""],["OQS_USE_SSE2_INSTRUCTIONS",""],["OQS_USE_SSE3_INSTRUCTIONS",""],["OQS_USE_SSE_INSTRUCTIONS",""],["OQS_VERSION_TEXT",""]],"enum":[["OQS_CPU_EXT","CPU runtime detection flags"],["OQS_STATUS","Represents return values from functions."]],"fn":[["OQS_CPU_has_extension","Checks if the CPU supports a given extension"],["OQS_MEM_aligned_alloc","Internal implementation of C11 aligned_alloc to work around compiler quirks."],["OQS_MEM_aligned_free","Free memory allocated with OQS_MEM_aligned_alloc."],["OQS_MEM_cleanse","Zeros out `len` bytes of memory starting at `ptr`."],["OQS_MEM_insecure_free","Frees `ptr`."],["OQS_MEM_secure_free","Zeros out `len` bytes of memory starting at `ptr`, then frees `ptr`."],["OQS_init","This currently only sets the values in the OQS_CPU_EXTENSIONS, and so has effect only when OQS_DIST_BUILD is set."]]});